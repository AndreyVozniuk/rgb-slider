{"version":3,"sources":["helpers.js","components/Slider/Slider.js","components/App/App.js","index.js"],"names":["numToHex","rgb","hex","Number","toString","length","Slider","max","min","title","value","onChange","className","type","e","target","style","width","App","g","b","useState","Rvalue","setRvalue","Gvalue","setGvalue","Bvalue","setBvalue","hexColor","marginBottom","background","ReactDOM","render","document","getElementById"],"mappings":"yOAAA,SAASA,EAASC,GAChB,IAAIC,EAAMC,OAAOF,GAAKG,SAAS,IAI/B,OAHIF,EAAIG,OAAS,IACfH,EAAM,IAAMA,GAEPA,E,SC0BMI,EA1BA,SAAC,GAA8C,IAAD,IAA5CC,WAA4C,MAAxC,IAAwC,MAAnCC,WAAmC,MAA/B,EAA+B,EAA5BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC7C,OAAO,oCACP,4BAAKF,GACL,yBAAKG,UAAU,eACb,2BACAC,KAAK,QACLD,UAAU,SACVL,IAAKA,EACLC,IAAKA,EACLE,MAAOA,EACPC,SAAU,SAAAG,GAAC,OAAIH,EAAUR,OAAOW,EAAEC,OAAOL,WAGzC,0BAAMM,MAAO,CAACC,MAAM,SAAUP,MCkBnBQ,G,MA9BH,WAAO,IFEQC,EAAEC,EEFX,EACYC,mBAAS,KADrB,mBACTC,EADS,KACDC,EADC,OAEYF,mBAAS,KAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGYJ,mBAAS,IAHrB,mBAGTK,EAHS,KAGDC,EAHC,KAKVC,GFHmBT,EEGSK,EFHPJ,EEGeM,EFCnC,IAHK1B,EEEcsB,GFDZtB,EAASmB,GACVnB,EAASoB,IEEtB,OAAO,yBAAKR,UAAU,QACpB,yBAAKA,UAAU,WACb,wBAAII,MAAO,CAACa,aAAa,SAAzB,iBACA,yBAAKjB,UAAU,WACb,kBAAC,EAAD,CAAQH,MAAM,MAAMC,MAAOY,EAAQX,SAAUY,IAC7C,kBAAC,EAAD,CAAQd,MAAM,QAAQC,MAAOc,EAAQb,SAAUc,IAC/C,kBAAC,EAAD,CAAQhB,MAAM,OAAOC,MAAOgB,EAAQf,SAAUgB,KAEhD,yBAAKf,UAAU,cAAcI,MAAO,CAACc,WAAYF,KACjD,yBAAKhB,UAAU,UACb,sCACA,0BAAMA,UAAU,mCAAhB,eAA2DU,EAA3D,aAAsEE,EAAtE,aAAiFE,EAAjF,UAEF,yBAAKd,UAAU,UACb,sCACA,0BAAMA,UAAU,mCAAmCgB,QCxB3DG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.667f3537.chunk.js","sourcesContent":["function numToHex(rgb) { \r\n  let hex = Number(rgb).toString(16)\r\n  if (hex.length < 2) {\r\n    hex = '0' + hex\r\n  }\r\n  return hex\r\n}\r\n\r\nexport function rgbToHex(r,g,b) {   \r\n  const red = numToHex(r)\r\n  const green = numToHex(g)\r\n  const blue = numToHex(b)\r\n  return '#' + red + green + blue\r\n}","import React from 'react'\r\nimport PT from 'prop-types'\r\n\r\nimport './Slider.css'\r\n\r\nconst Slider = ({max=255, min=0, title, value, onChange}) => {\r\n  return <>\r\n  <h4>{title}</h4>\r\n  <div className='slider-wrap'>\r\n    <input \r\n    type='range' \r\n    className='slider'\r\n    max={max} \r\n    min={min}\r\n    value={value}\r\n    onChange={e => onChange( Number(e.target.value) )}\r\n    >\r\n    </input>\r\n    <span style={{width:'15px'}}>{value}</span>\r\n  </div>\r\n  </>\r\n}\r\n\r\nSlider.propTypes = {\r\n  max: PT.number,\r\n  min: PT.number,\r\n  value: PT.number.isRequired,\r\n  title: PT.string.isRequired,\r\n  onChange: PT.func.isRequired\r\n}\r\n\r\nexport default Slider","import React, {useState} from 'react'\r\nimport {rgbToHex} from '../../helpers'\r\nimport Slider from '../Slider/Slider'\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [Rvalue, setRvalue] = useState(125)\r\n  const [Gvalue, setGvalue] = useState(150)\r\n  const [Bvalue, setBvalue] = useState(50)\r\n\r\n  const hexColor = rgbToHex(Rvalue, Gvalue, Bvalue)\r\n\r\n  return <div className='wrap'>\r\n    <div className='content'>\r\n      <h1 style={{marginBottom:'20px'}}>Color chooser</h1>\r\n      <div className='sliders'>\r\n        <Slider title='Red' value={Rvalue} onChange={setRvalue}/>\r\n        <Slider title='Green' value={Gvalue} onChange={setGvalue}/>\r\n        <Slider title='Blue' value={Bvalue} onChange={setBvalue}/>\r\n      </div>\r\n      <div className='color-block' style={{background: hexColor}}></div>\r\n      <div className='result'>\r\n        <span>Dec:</span> \r\n        <span className='badge badge-dark text-monospace'>{`rgba(${Rvalue}, ${Gvalue}, ${Bvalue}, 1)`}</span>\r\n      </div>\r\n      <div className='result'>\r\n        <span>Hex:</span> \r\n        <span className='badge badge-dark text-monospace'>{hexColor}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom' \nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}